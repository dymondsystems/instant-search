<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
* {
  box-sizing: border-box;
}

body {
  font: 16px Arial;  
}

.autocomplete {
  position: relative;
  display: inline-block;
}

input[type=text] {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
  width: 100%;
}

input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
  cursor: pointer;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  top: 100%;
  left: 0;
  right: 0;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4;
  display: flex;
  align-items: center;
}

.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}

.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}

.result-content {
  margin-left: 10px;
}

.result-image {
  width: 140px;
  height: 140px;
  border-radius: 0%;
}

.result-button {
  margin-left: auto;
  background-color: DodgerBlue;
  color: white;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
  font-size: 22px;
  text-decoration: none;
  border-radius: 5px;
}
</style>
</head>
<body>

<h2>Autocomplete with Image, HTML Snippet, and Link Button</h2>

<p>Start typing:</p>

<form autocomplete="off" action="/action_page.php">
  <div class="autocomplete" style="width:100%;">
    <input id="myInput" type="text" name="myCountry" placeholder="Country">
  </div>
  <input type="submit">
</form>

<script>
function autocomplete(inp, arr) {
  var currentFocus;
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      this.parentNode.appendChild(a);

      for (i = 0; i < arr.length; i++) {
        if (arr[i].label.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          b = document.createElement("DIV");

          // Image
          var img = document.createElement("img");
          img.src = arr[i].imgSrc;
          img.width = 140; // Set image width
          img.height = 140; // Set image height
          img.className = "result-image";
          b.appendChild(img);

          // Content Container
          var contentDiv = document.createElement("div");
          contentDiv.className = "result-content";
          contentDiv.innerHTML = "<strong>" + arr[i].label.substr(0, val.length) + "</strong>" + arr[i].label.substr(val.length);
          contentDiv.innerHTML += "<div style='font-size:12px; color:gray;'>" + arr[i].htmlSnippet + "</div>";
          b.appendChild(contentDiv);

          // Link Button
          var button = document.createElement("a");
          button.href = arr[i].link;
          button.textContent = "Add";
          button.target = "_blank"; // Opens in a new tab
          button.className = "result-button";
          b.appendChild(button);

          // Hidden Input
          b.innerHTML += "<input type='hidden' value='" + arr[i].label + "'>";
          b.addEventListener("click", function(e) {
              inp.value = this.getElementsByTagName("input")[0].value;
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        currentFocus++;
        addActive(x);
      } else if (e.keyCode == 38) {
        currentFocus--;
        addActive(x);
      } else if (e.keyCode == 13) {
        e.preventDefault();
        if (currentFocus > -1) {
          if (x) x[currentFocus].click();
        }
      }
  });
  
  function addActive(x) {
    if (!x) return false;
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    x[currentFocus].classList.add("autocomplete-active");
  }
  
  function removeActive(x) {
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  
  function closeAllLists(elmnt) {
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }
  
  document.addEventListener("click", function (e) {
      closeAllLists(e.target);
  });
}

// Array of countries with label, htmlSnippet, image, and link
var countries = [
  { label: "Afghanistan", htmlSnippet: "Population: 38 million this is a test bhhhhhh hhhhh hhhhhh hhhhhhhh hhhhhhhh hhhhh", imgSrc: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Google_%22G%22_logo.svg/1200px-Google_%22G%22_logo.svg.png", link: "https://en.wikipedia.org/wiki/Afghanistan" },
  { label: "Albania", htmlSnippet: "Population: 2.8 million", imgSrc: "https://via.placeholder.com/40", link: "https://en.wikipedia.org/wiki/Albania" },
  { label: "Algeria", htmlSnippet: "Population: 43 million", imgSrc: "https://via.placeholder.com/40", link: "https://en.wikipedia.org/wiki/Algeria" },
  { label: "Andorra", htmlSnippet: "Population: 77,000", imgSrc: "https://via.placeholder.com/40", link: "https://en.wikipedia.org/wiki/Andorra" },
  { label: "Angola", htmlSnippet: "Population: 32 million", imgSrc: "https://via.placeholder.com/40", link: "https://en.wikipedia.org/wiki/Angola" },
  // Add more countries with imgSrc and link as needed
];

autocomplete(document.getElementById("myInput"), countries);
</script>

</body>
</html>

